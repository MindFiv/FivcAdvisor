[build-system]
requires = ["setuptools>=68", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "fivcadvisor"
version = "0.1.0"
description = "Pattern-driven CrewAI flows and tools"
readme = "README.md"
requires-python = ">=3.10"
authors = [{ name = "Charlie" }]
dependencies = [
  "typer>=0.12.3",
  "rich>=13.7.1",
  "PyYAML>=6.0.1",
  "python-dotenv>=1.0.1",
  "pydantic>=2.7.0",
  "httpx>=0.28.1",
  "streamlit>=1.49.1",
  "audioread>=3.0.1",
  "strands-agents>=1.9.1",
  "strands-agents-tools>=0.2.8",
  "openai>=1.109.1",
  "langchain-text-splitters>=0.3.11",
  "chromadb>=1.1.0",
]

[project.optional-dependencies]
dev = [
  "pytest>=8.2.0",
  "pytest-asyncio>=0.21.0",
  "ruff>=0.4.0,<0.6"
]

[project.scripts]
fivcadvisor = "fivcadvisor.cli:main"

[tool.setuptools.packages.find]
where = ["src"]

[dependency-groups]
dev = [
    "pytest>=8.4.1",
]

[tool.pytest.ini_options]
# Suppress specific deprecated warnings from third-party libraries
filterwarnings = [
    # Suppress all deprecation warnings (broad approach for cleaner test output)
    "ignore::DeprecationWarning",
    "ignore::PendingDeprecationWarning",
    "ignore::RuntimeWarning",

    # Keep important warnings but suppress noisy third-party ones
    "default::UserWarning",
    "default::FutureWarning",
]

# Test discovery settings
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]

# Additional pytest options
addopts = [
    "--strict-markers",
    "--strict-config",
    "--verbose",
    "-p", "no:warnings",  # Disable warnings plugin
]

# Markers for test categorization
markers = [
    "asyncio: marks tests as async (deselect with '-m \"not asyncio\"')",
]
